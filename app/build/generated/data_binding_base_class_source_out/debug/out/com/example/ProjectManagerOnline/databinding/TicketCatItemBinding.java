// Generated by view binder compiler. Do not edit!
package com.example.ProjectManagerOnline.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ProjectManagerOnline.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TicketCatItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDel;

  @NonNull
  public final Button btnEdit;

  @NonNull
  public final TextView cattext;

  @NonNull
  public final TextView cattext1;

  @NonNull
  public final TextView ticketCount;

  @NonNull
  public final TextView ticketPrice;

  @NonNull
  public final TextView tixketCount1;

  @NonNull
  public final TextView tixketPrice1;

  private TicketCatItemBinding(@NonNull CardView rootView, @NonNull Button btnDel,
      @NonNull Button btnEdit, @NonNull TextView cattext, @NonNull TextView cattext1,
      @NonNull TextView ticketCount, @NonNull TextView ticketPrice, @NonNull TextView tixketCount1,
      @NonNull TextView tixketPrice1) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnEdit = btnEdit;
    this.cattext = cattext;
    this.cattext1 = cattext1;
    this.ticketCount = ticketCount;
    this.ticketPrice = ticketPrice;
    this.tixketCount1 = tixketCount1;
    this.tixketPrice1 = tixketPrice1;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static TicketCatItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TicketCatItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ticket_cat_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TicketCatItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDel;
      Button btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      Button btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.cattext;
      TextView cattext = ViewBindings.findChildViewById(rootView, id);
      if (cattext == null) {
        break missingId;
      }

      id = R.id.cattext1;
      TextView cattext1 = ViewBindings.findChildViewById(rootView, id);
      if (cattext1 == null) {
        break missingId;
      }

      id = R.id.ticketCount;
      TextView ticketCount = ViewBindings.findChildViewById(rootView, id);
      if (ticketCount == null) {
        break missingId;
      }

      id = R.id.ticketPrice;
      TextView ticketPrice = ViewBindings.findChildViewById(rootView, id);
      if (ticketPrice == null) {
        break missingId;
      }

      id = R.id.tixketCount1;
      TextView tixketCount1 = ViewBindings.findChildViewById(rootView, id);
      if (tixketCount1 == null) {
        break missingId;
      }

      id = R.id.tixketPrice1;
      TextView tixketPrice1 = ViewBindings.findChildViewById(rootView, id);
      if (tixketPrice1 == null) {
        break missingId;
      }

      return new TicketCatItemBinding((CardView) rootView, btnDel, btnEdit, cattext, cattext1,
          ticketCount, ticketPrice, tixketCount1, tixketPrice1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
